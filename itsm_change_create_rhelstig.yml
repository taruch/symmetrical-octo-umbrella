---

- name: Create ServiceNow incident ticket
  hosts: "{{ _hosts | default(omit) }}"
  gather_facts: false
  vars:
    job_id: '276'
    _controller_host_: "{{ lookup('ansible.builtin.env', 'CONTROLLER_HOST', default=undef()) }}"
    _url_: "{{ _controller_host_ }}/api/controller/v2/jobs/{{ job_id }}/job_events/?search={{ inventory_hostname }}&changed=true"
    _user_: "{{ lookup('ansible.builtin.env', 'CONTROLLER_USERNAME', default=undef()) }}"
    _password_: "{{ lookup('ansible.builtin.env', 'CONTROLLER_PASSWORD', default=undef()) }}"

  tasks:
    - name: Check if ServiceNow credentials are set
      when: SN_HOST is not defined or SN_USERNAME is not defined or SN_PASSWORD is not defined
      ansible.builtin.fail:
        msg: "ServiceNow credentials are not set. Please set SN_HOST, SN_USERNAME, and SN_PASSWORD."

    - name: Check if AAP credentials are set
      when: _controller_host_ is not defined or _user_ is not defined or _password_ is not defined
      ansible.builtin.fail:
        msg: "Ansible Automation Platform credentials are not set. Please set CONTROLLER_HOST, CONTROLLER_USERNAME, and CONTROLLER_PASSWORD."

    - name: Use the URI module to connect to the ansible automation platform and get events
      delegate_to: localhost
      ansible.builtin.uri:
        url: "{{ _url_ }}"
        method: GET
        user: "{{ _user_ }}"
        password: "{{ _password_ }}"
        force_basic_auth: true
        return_content: true
        validate_certs: false
      register: events_api_out
      failed_when: events_api_out.status != 200

    - name: Set VAR from events API output
      when: item.event_data.res is defined
      loop: "{{ events_api_out.json.results }}"
      ansible.builtin.set_fact:
        resolution: "{{ resolution | default([]) + [item.event_data.res] }}"

    - name: Debug events API output
      loop: "{{ resolution }}"
      when: item.diff is defined
      ansible.builtin.set_fact:
        diffs: "{{ diffs | default([]) + [item.diff] }}"

    - name: Create Change Request Ticket in ITSM System
      delegate_to: localhost
      block:
        - name: Create Change Request
          servicenow.itsm.change_request:
            instance:
              host: "{{ SN_HOST }}"
              username: "{{ SN_USERNAME }}"
              password: "{{ SN_PASSWORD }}"
            state: new
            type: normal
            requested_by: "admin"
            short_description: '{{ inventory_hostname }}'
            description: |
              '{{ inventory_hostname }} is out of compliance.'
              'Use the following URL for details: {{ job_url }}'
              ---------------------------------------------------
              'In the section below you will find a list of the changes to be made to the system to bring it into compliance.'
              'Please review the changes and approve them.'

              '{{ diffs | to_nice_json }}'
            priority: low
            impact: low
            risk: low
            urgency: medium
            category: Software
            assignment_group: 'Change Management'
            other:
              start_date: "{{ lookup('pipe', 'date +%Y%m%d%H%M%S') }}"
              expected_start: "{{ lookup('pipe', 'date +%Y%m%d%H%M%S') }}"
              implementation_plan: >
                Implement the following playbook, which will run the tasks detailed in the link
                {{ job_url }}
              answer: true
          register: change_out

        - name: Set fact for change number
          ansible.builtin.set_fact:
            change_number: "{{ change_out.record.number }}"

        - name: Debug change number
          ansible.builtin.debug:
            msg: "{{ change_number }}"

    - name: Set change Number
      ansible.builtin.set_stats:
        data:
          change_number: "{{ change_number }}"

...
